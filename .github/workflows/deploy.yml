name: Build and Deploy to Hostinger

on:
  push:
    branches: [master, main]
    paths:
      - "src/**"
      - "scripts/**"
      - "package.json"
      - "angular.json"
      - "tsconfig.json"
      - ".github/workflows/deploy.yml"
  pull_request:
    branches: [master, main]
  workflow_dispatch: # Permite ejecuci√≥n manual

jobs:
  validate:
    name: Validate Projects JSON
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate projects.json
        run: npm run validate:projects

      - name: Run linter
        run: npm run lint
        continue-on-error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build production
        run: npm run build:prod
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Verify build output
        run: |
          if [ ! -d "dist/ma-arquitectura-landing/browser" ]; then
            echo "‚ùå Build failed - no output directory"
            exit 1
          fi
          echo "‚úÖ Build successful"
          ls -lh dist/ma-arquitectura-landing/browser/

      - name: Create deployment package
        run: |
          cd dist/ma-arquitectura-landing/browser
          tar -czf ../../../deploy.tar.gz .
          cd ../../..
          ls -lh deploy.tar.gz

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: deploy.tar.gz
          retention-days: 7

  deploy:
    name: Deploy to Hostinger
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Extract build files
        run: |
          mkdir -p deploy
          tar -xzf deploy.tar.gz -C deploy
          ls -lh deploy/

      - name: Debug deploy directory
        run: |
          echo "=== Deploy directory contents ==="
          ls -la deploy/
          echo "=== File count ==="
          find deploy/ -type f | wc -l
          echo "=== Total size ==="
          du -sh deploy/

      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deploy/
          server-dir: /public_html/
          state-name: .ftp-deploy-sync-state.json
          dangerous-clean-slate: false
          log-level: verbose
          dry-run: false
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.DS_Store

      - name: Verify deployment
        run: |
          echo "‚úÖ FTP upload completed"
          echo "üìù Files uploaded from: ./deploy/"
          echo "üìù Files uploaded to: /public_html/"
          echo "üîç Check your site to verify changes"

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåê Site should be live at your domain"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for details"
